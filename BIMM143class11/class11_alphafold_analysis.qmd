---
title: "AlphaFold Analysis"
author: "Lily Huynh (PID:A16929651)"
date: 2/11/2025
toc: true
format: pdf
---

Here we analyze our AlphaFold structure prediction models. The input directoy/folder comes from the ColabFold server:

```{r}
# Change this for YOUR results dir name
results_dir <- "hivpr_monomer_94b5b/" 
```

```{r}
# File names for all PDB models
pdb_files <- list.files(path=results_dir,
                        pattern="*.pdb",
                        full.names = TRUE)

# Print our PDB file names
basename(pdb_files)
```

I will use the Bio3D package for analysis 

```{r}
library(bio3d)
```

Align and superpose

```{r}
# Read all data from Models 
#  and superpose/fit coords
pdbs <- pdbaln(pdb_files, fit=TRUE, exefile="msa")
pdbs
```

A quick PCA

```{r}
pc <- pca(pdbs)
plot(pc)
```

## RMSD analysis
RMSD is a common measure of structural distance used in structural biology

```{r}
rd <- rmsd(pdbs, fit=T)
```

```{r}
rd
```

```{r}
library(pheatmap)

colnames(rd) <- paste0("m",1:5)
rownames(rd) <- paste0("m",1:5)
pheatmap(rd)
```

## 8. Custom analysis of resulting models for the hivprdimer

I will now do an alphafold analysis on the hiv dimer. I will first analyze the AlphaFold structure prediction models. The input directoy/folder comes from the ColabFold server:

```{r}
# Change this for YOUR results dir name
results_dir2 <- "hivprdimer_23119/" 
```

```{r}
# File names for all PDB models
pdb_files2 <- list.files(path=results_dir2,
                        pattern="*.pdb",
                        full.names = TRUE)

# Print our PDB file names
basename(pdb_files2)
```

Then I will use the Bio3D package for analysis 

```{r}
library(bio3d)
```

Align and superpose

```{r}
# Read all data from Models 
#  and superpose/fit coords
pdbs2 <- pdbaln(pdb_files2, fit=TRUE, exefile="msa")
pdbs2
```

## RMSD analysis of hivprdimer
RMSD is a common measure of structural distance used in structural biology

```{r}
rd2 <- rmsd(pdbs2, fit=T)
```

```{r}
range(rd2)
```

## Drawing a heatmap using the RMSD matrix values

```{r}
library(pheatmap)

colnames(rd2) <- paste0("m",1:5)
rownames(rd2) <- paste0("m",1:5)
pheatmap(rd2)

```

I will now plot the pLDDT values

```{r}
# Read a reference PDB structure
pdb <- read.pdb("1hsg")
```

```{r}
plotb3(pdbs2$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs2$b[2,], typ="l", col="red")
points(pdbs2$b[3,], typ="l", col="blue")
points(pdbs2$b[4,], typ="l", col="darkgreen")
points(pdbs2$b[5,], typ="l", col="orange")
abline(v=100, col="gray")
```

Then I need to superposition the models

```{r}
core <- core.find(pdbs2)
core.inds <- print(core, vol=0.5)
```

```{r}
xyz <- pdbfit(pdbs2, core.inds, outpath="corefit_structures")
```

```{r}
rf <- rmsf(xyz)

plotb3(rf, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```

## Predicted Alignment Error for domains

I will first look in the library to get the PAE files. 

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files <- list.files(path=results_dir2,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

Then I will read the files and figure out what attributes are given.

```{r}
pae1 <- read_json(pae_files[1],simplifyVector = TRUE)
pae5 <- read_json(pae_files[5],simplifyVector = TRUE)

attributes(pae1)
```

Based on the attributes, I will focus on the plddt and max_pae.

```{r}
# Per-residue pLDDT scores 
#  same as B-factor of PDB..
head(pae1$plddt) 
```

```{r}
pae1$max_pae
```

```{r}
pae5$max_pae
```

Then I will plot the pae values

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae5$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

It is important to notice that the z values (the bar graph shown on the right) are not in the same range. Therefore, we need to remake the models and give them the same z range. 

```{r}
plot.dmat(pae1$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

## Residue conservation from alignment file

```{r}
aln_file <- list.files(path=results_dir2,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file
```

```{r}
aln <- read.fasta(aln_file[1], to.upper = TRUE)
```

> Q. How many sequences are in this alignment

```{r}
dim(aln$ali)
```

To score residue conservation in the alignment, we can use the `conserv()` function. 

```{r}
sim <- conserv(aln)
```

Then I can plot it

```{r}
plotb3(sim[1:99], sse=trim.pdb(pdb, chain="A"),
       ylab="Conservation Score")
```

Then we will figure out which positions and sequence is conserved:

```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```

Finally, we will save it as a file

```{r}
m1.pdb <- read.pdb(pdb_files2[1])
occ <- vec2resno(c(sim[1:99], sim[1:99]), m1.pdb$atom$resno)
write.pdb(m1.pdb, o=occ, file="m1_conserv.pdb")
```

## 9. Custom analysis of my gene 

I will now do an alphafold analysis on my novel gene, collagen. 

```{r}
```{r}
# Change this for YOUR results dir name
results_dir3 <- "" 
```

```{r}
# File names for all PDB models
pdb_files3 <- list.files(path=results_dir3,
                        pattern="*.pdb",
                        full.names = TRUE)

# Print our PDB file names
basename(pdb_files2)
```

Use the Bio3D package for analysis 

```{r}
library(bio3d)
```

Align and superpose

```{r}
# Read all data from Models 
#  and superpose/fit coords
pdbs3 <- pdbaln(pdb_files3, fit=TRUE, exefile="msa")
pdbs3
```

## RMSD analysis of the novel collagen gene

```{r}
rd3 <- rmsd(pdbs3, fit=T)
range(rd3)
```

## Drawing a heatmap using the RMSD matrix values

```{r}
library(pheatmap)

colnames(rd3) <- paste0("m",1:5)
rownames(rd3) <- paste0("m",1:5)
pheatmap(rd3)

```

I will now plot the pLDDT values

```{r}
# Read a reference PDB structure
pdb3 <- read.pdb("1hsg")
```

```{r}
plotb3(pdbs3$b[1,], typ="l", lwd=2, sse=pdb)
points(pdbs3$b[2,], typ="l", col="red")
points(pdbs3$b[3,], typ="l", col="blue")
points(pdbs3$b[4,], typ="l", col="darkgreen")
points(pdbs3$b[5,], typ="l", col="orange")
abline(v=100, col="gray")
```

Then I need to superposition the models

```{r}
core3 <- core.find(pdbs3)
core.inds3 <- print(core3, vol=0.5)
```

```{r}
xyz3 <- pdbfit(pdbs3, core.inds, outpath="corefit_structures")
```

```{r}
rf3 <- rmsf(xyz3)

plotb3(rf3, sse=pdb)
abline(v=100, col="gray", ylab="RMSF")
```

## Predicted Alignment Error for domains

I will first look in the library to get the PAE files. 

```{r}
library(jsonlite)

# Listing of all PAE JSON files
pae_files3 <- list.files(path=results_dir3,
                        pattern=".*model.*\\.json",
                        full.names = TRUE)
```

Then I will read the files and figure out what attributes are given.

```{r}
pae31 <- read_json(pae_files3[1],simplifyVector = TRUE)
pae35 <- read_json(pae_files3[5],simplifyVector = TRUE)

attributes(pae1)
```

Based on the attributes, I will focus on the plddt and max_pae.

```{r}
# Per-residue pLDDT scores 
#  same as B-factor of PDB..
head(pae31$plddt) 
```

```{r}
pae31$max_pae
```

```{r}
pae35$max_pae
```

Then I will plot the pae values

```{r}
plot.dmat(pae31$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)")
```

```{r}
plot.dmat(pae35$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

It is important to notice that the z values (the bar graph shown on the right) are not in the same range. Therefore, we need to remake the models and give them the same z range. 

```{r}
plot.dmat(pae31$pae, 
          xlab="Residue Position (i)",
          ylab="Residue Position (j)",
          grid.col = "black",
          zlim=c(0,30))
```

## Residue conservation from alignment file

```{r}
aln_file3 <- list.files(path=results_dir3,
                       pattern=".a3m$",
                        full.names = TRUE)
aln_file3
```

```{r}
aln3 <- read.fasta(aln_file3[1], to.upper = TRUE)
```

> Q. How many sequences are in this alignment

```{r}
dim(aln3$ali)
```

To score residue conservation in the alignment, we can use the `conserv()` function. 

```{r}
sim3 <- conserv(aln3)
```

Then I can plot it

```{r}
plotb3(sim3[1:99], sse=trim.pdb(pdb, chain="A"),
       ylab="Conservation Score")
```

Then we will figure out which positions and sequence is conserved:

```{r}
con <- consensus(aln, cutoff = 0.9)
con$seq
```

Finally, I will save it as a file

```{r}
m1.pdb3 <- read.pdb(pdb_files3[1])
occ <- vec2resno(c(sim3[1:99], sim3[1:99]), m1.pdb3$atom$resno)
write.pdb(m1.pdb3, o=occ, file="collagen_conserv.pdb")
```











